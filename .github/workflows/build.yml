name: Test, build and deploy master to Pantheon

on:
  push:
    branches: [ master ]

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress --prefer-dist --optimize-autoloader"
  PANTHEON_URL: '${{ secrets.PANTHEON_URL }}'
  PANTHEON_SITE_NAME: '${{ secrets.PANTHEON_SITE_NAME }}'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Installing PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: sodium, json
          coverage: none
      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"
      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"
      - uses: actions/checkout@v2
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Set Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-
      - name: Install dependencies
        run: 'composer install ${{ env.COMPOSER_FLAGS }}'
      - name: PHP linting
        run: composer lint
      - name: Run PHPCS
        run: composer code-sniff
  build-deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success() && github.ref == 'refs/heads/master'
    steps:
      - name: Installing PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: sodium, json
          coverage: none
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install without dev dependencies
        run: 'composer install ${{ env.COMPOSER_FLAGS }} --no-dev'
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PANTHEON_DEPLOY_KEY }}
          name: id_rsa
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      - name: Force Git Sync
        run: |
          find web -name '.git' -type d -prune -exec rm -rf "{}" \;
          git remote add pantheon ${{ env.PANTHEON_URL }}
          git fetch pantheon master
          rm -rf web/sites/default/files
          rm -rf web/sites/default/settings.local.php
          git add -f .
          git -c user.name='Github Action' -c user.email='<>' commit -m"Deploy to Pantheon from commit ${GITHUB_SHA}"
          git push pantheon master -f
